{"version":3,"sources":["API/axios.js","Row/Row.js","API/requests.js","Banner/Banner.js","Nav/Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useEffect","a","get","request","setMovies","data","results","fetchData","useState","movies","trailerURL","setTrailerURL","className","map","movie","onClick","console","log","name","movieTrailer","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d260b9f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useEffect, useState } from 'react';\nimport axios from '../API/axios';\nimport \"./Row.css\";\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst baseURL = 'https://image.tmdb.org/t/p/w500'\n\nfunction Row({title, fetchURL, isLargeRow}) {\n\n    //A snippet of code that runs based on a specific condition\n    useEffect(() => {\n\n        async function fetchData () {\n            const request = await axios.get(fetchURL);\n            setMovies(request.data.results)\n            return request;\n        }\n\n        fetchData();\n\n    }, [fetchURL]);\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    }\n\n    const [movies, setMovies] = useState([]);\n    const [trailerURL, setTrailerURL] = useState(\"\");\n\n    const handleClick = (movie) => {\n        if (trailerURL) {\n            setTrailerURL(\"\");\n        } \n        else {\n            console.log(movie.name)\n            movieTrailer(movie?.name || movie?.title || movie?.original_name || \"\")\n            .then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerURL(urlParams.get('v'));\n            })\n            .catch((error) => console.log(error));\n        }\n    }\n    \n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row-posters\">\n                {movies.map(movie => (\n                    <img key={movie.id}\n                        className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\n                        onClick={() => handleClick(movie)}\n                        src={`${baseURL}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \n                        alt={movie.name}/>\n                ))}\n            </div>\n            {trailerURL && <Youtube videoId={trailerURL} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row;\n","const API_KEY = \"5516457022899baab29885226e6e37db\";\n\n\nconst requests = {\n    fetchTrending: `/trending/movie/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n\n}\n\nexport default requests;","import React, { useEffect, useState } from 'react'\nimport axios from '../API/axios';\nimport requests from '../API/requests';\nimport \"./Banner.css\"\n\nfunction Banner() {\n\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals)\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n            return request;\n        }\n        fetchData();\n\n    }, []);\n\n    console.log(movie)\n\n    function truncate(str, n){\n        return str?.length > n ? str.substr(0, n - 1) + \"...\": str;\n    }\n    \n\n    return (\n        <header className=\"banner\"\n        style={{\n\n            backgroundSize: \"cover\",\n            backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\n            backgroundPosition: 'center center',\n\n        }}\n        > \n            <div className=\"banner-contents\">\n                <h1 className=\"banner-title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n                <div className=\"banner-buttons\">\n                    <button className=\"banner-button\">Play</button>\n                    <button className=\"banner-button\">My List</button>\n                </div>\n                <h1 className=\"banner-description\">{truncate(movie?.overview, 150)}</h1>\n            </div>\n\n            <div className=\"banner-fadeBottom\" />\n            \n        </header>\n    )\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from 'react';\nimport \"./Nav.css\"\n\nfunction Nav() {\n\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100){\n                handleShow(true);\n            }\n            else {\n                handleShow(false);\n            }\n        });\n\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n\n    }, [])\n    \n\n    return (\n        <div className={`Nav ${show && \"nav-black\"}`}>\n            <img className=\"nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" \n                alt=\"Netflix Logo\">\n            </img>\n\n            <img className=\"nav-avatar\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" \n                alt=\"Netflix Avatar\">\n            </img>\n            \n        </div>\n    )\n}\n\nexport default Nav;\n","import React from 'react';\nimport './App.css';\nimport Row from './Row/Row';\nimport requests from './API/requests';\nimport Banner from './Banner/Banner';\nimport Nav from \"./Nav/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row \n      title=\"NETFLIX ORIGINALS\"\n      fetchURL={requests.fetchNetflixOriginals}\n      isLargeRow/> \n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies}/>\n      <Row title=\"Comedies\" fetchURL={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}